{
  "version": 3,
  "sources": ["../src/extension.ts"],
  "sourcesContent": ["// The module 'vscode' contains the VS Code extensibility API\n// Import the module and reference it with the alias vscode in your code below\nimport * as vscode from 'vscode';\nimport * as path from 'path';\nfunction applyStrikethrough(text: string): string {\n    return text.split('').map(char => char + '\\u0336').join('');\n}\n\ninterface DeprecatedFilesConfig {\n\texcludedDirectories: string[];\n\tdecorations: {\n\t\tbadge: string;\n\t\tcolor: string;\n\t\tcustomColor: string;\n\t};\n\tscanOnStartup: boolean;\n\tmaxLinesToScan: number;\n}\n\nclass DeprecatedFilesDecorationProvider implements vscode.FileDecorationProvider {\n\tprivate _onDidChangeFileDecorations = new vscode.EventEmitter<vscode.Uri | vscode.Uri[] | undefined>();\n\treadonly onDidChangeFileDecorations = this._onDidChangeFileDecorations.event;\n\tprivate deprecatedFiles: Set<string> = new Set();\n\tprivate deprecatedFolderCounts: Map<string, number> = new Map();\n\tprivate config: DeprecatedFilesConfig;\n\n\tconstructor() {\n\t\tthis.config = this.getConfig();\n\t\t// Listen for configuration changes\n\t\tvscode.workspace.onDidChangeConfiguration(e => {\n\t\t\tif (e.affectsConfiguration('flagDeprecatedFiles')) {\n\t\t\t\tthis.config = this.getConfig();\n\t\t\t\tthis.updateDecorations();\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate getConfig(): DeprecatedFilesConfig {\n\t\tconst config = vscode.workspace.getConfiguration('flagDeprecatedFiles');\n\t\treturn {\n\t\t\texcludedDirectories: config.get<string[]>('excludedDirectories', ['node_modules']),\n\t\t\tdecorations: {\n\t\t\t\tbadge: config.get<string>('decorations.badge', '\u2296'),\n\t\t\t\tcolor: config.get<string>('decorations.color', 'amber'),\n\t\t\t\tcustomColor: config.get<string>('decorations.customColor', '#d4a72c')\n\t\t\t},\n\t\t\tscanOnStartup: config.get<boolean>('scanOnStartup', true),\n\t\t\tmaxLinesToScan: config.get<number>('maxLinesToScan', 12)\n\t\t};\n\t}\n\n\tasync checkSingleFile(uri: vscode.Uri): Promise<boolean> {\n\t\ttry {\n\t\t\tconst document = await vscode.workspace.openTextDocument(uri);\n\t\t\tconst text = document.getText();\n\t\t\t// Only check the first N lines for the @deprecated tag\n\t\t\tconst lines = text.split('\\n').slice(0, this.config.maxLinesToScan);\n\t\t\treturn lines.some(line => line.includes('@deprecated'));\n\t\t} catch (error) {\n\t\t\tconsole.error(`Error processing file ${uri.fsPath}:`, error);\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tasync updateDeprecatedFiles() {\n\t\tif (!vscode.workspace.workspaceFolders) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst files = await vscode.workspace.findFiles(\n\t\t\t'**/*.{js,ts,jsx,tsx,java,py,md,mdx}',\n\t\t\t`{${this.config.excludedDirectories.map(dir => `**/${dir}/**`).join(',')}}`\n\t\t);\n\n\t\t// Clear previous state\n\t\tthis.deprecatedFiles.clear();\n\t\tthis.deprecatedFolderCounts.clear();\n\n\t\t// Process files and update folder counts\n\t\tfor (const file of files) {\n\t\t\tif (await this.checkSingleFile(file)) {\n\t\t\t\tthis.deprecatedFiles.add(file.fsPath);\n\t\t\t\tthis.updateFolderCount(file.fsPath);\n\t\t\t}\n\t\t}\n\t\tthis.updateDecorations();\n\t}\n\n\tprivate updateFolderCount(filePath: string) {\n\t\tconst dir = path.dirname(filePath);\n\t\tconst count = this.deprecatedFolderCounts.get(dir) || 0;\n\t\tthis.deprecatedFolderCounts.set(dir, count + 1);\n\t}\n\n\tasync handleFileChange(uri: vscode.Uri) {\n\t\tconst isDeprecated = await this.checkSingleFile(uri);\n\t\tconst wasDeprecated = this.deprecatedFiles.has(uri.fsPath);\n\n\t\tif (isDeprecated && !wasDeprecated) {\n\t\t\tthis.deprecatedFiles.add(uri.fsPath);\n\t\t\tthis.updateFolderCount(uri.fsPath);\n\t\t\tthis.updateDecorations(uri);\n\t\t} else if (!isDeprecated && wasDeprecated) {\n\t\t\tthis.deprecatedFiles.delete(uri.fsPath);\n\t\t\tthis.decrementFolderCount(uri.fsPath);\n\t\t\tthis.updateDecorations(uri);\n\t\t}\n\t}\n\n\tprivate decrementFolderCount(filePath: string) {\n\t\tconst dir = path.dirname(filePath);\n\t\tconst count = this.deprecatedFolderCounts.get(dir) || 0;\n\t\tif (count > 1) {\n\t\t\tthis.deprecatedFolderCounts.set(dir, count - 1);\n\t\t} else {\n\t\t\tthis.deprecatedFolderCounts.delete(dir);\n\t\t}\n\t}\n\n\thandleFileDelete(uri: vscode.Uri) {\n\t\tif (this.deprecatedFiles.has(uri.fsPath)) {\n\t\t\tthis.deprecatedFiles.delete(uri.fsPath);\n\t\t\tthis.decrementFolderCount(uri.fsPath);\n\t\t\tthis.updateDecorations(uri);\n\t\t}\n\t}\n\n\tasync handleFileCreate(uri: vscode.Uri) {\n\t\tif (await this.checkSingleFile(uri)) {\n\t\t\tthis.deprecatedFiles.add(uri.fsPath);\n\t\t\tthis.updateFolderCount(uri.fsPath);\n\t\t\tthis.updateDecorations(uri);\n\t\t}\n\t}\n\n\tprivate async isDirectory(fsPath: string): Promise<boolean> {\n\t\ttry {\n\t\t\tconst stat = await vscode.workspace.fs.stat(vscode.Uri.file(fsPath));\n\t\t\treturn stat.type === vscode.FileType.Directory;\n\t\t} catch {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tasync provideFileDecoration(uri: vscode.Uri): Promise<vscode.FileDecoration | undefined> {\n\t\tconst isFile = uri.scheme === 'file';\n\t\tif (!isFile) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tconst fsPath = uri.fsPath;\n\t\t\n\t\t// First check if it's a deprecated file\n\t\tif (this.deprecatedFiles.has(fsPath)) {\n\t\t\tconst fileName = path.basename(fsPath);\n\t\t\treturn {\n\t\t\t\tbadge: this.config.decorations.badge,\n\t\t\t\tcolor: this.config.decorations.color === 'custom' \n\t\t\t\t\t? new vscode.ThemeColor(this.config.decorations.customColor)\n\t\t\t\t\t: new vscode.ThemeColor('deprecated.files.subtle'),\n\t\t\t\ttooltip: `${this.config.decorations.badge} ${applyStrikethrough(fileName)}\\n\\nThis file is marked as deprecated.\\nConsider updating any code that depends on it.`\n\t\t\t};\n\t\t}\n\n\t\t// Then check if it's a directory with deprecated files\n\t\ttry {\n\t\t\tconst stat = await vscode.workspace.fs.stat(uri);\n\t\t\tif (stat.type === vscode.FileType.Directory) {\n\t\t\t\tconst count = this.deprecatedFolderCounts.get(fsPath);\n\t\t\t\tif (count) {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tbadge: `${count} ${this.config.decorations.badge}`,\n\t\t\t\t\t\tcolor: this.config.decorations.color === 'custom' \n\t\t\t\t\t\t\t? new vscode.ThemeColor(this.config.decorations.customColor)\n\t\t\t\t\t\t\t: new vscode.ThemeColor('deprecated.files.subtle'),\n\t\t\t\t\t\ttooltip: `Contains ${count} deprecated file${count > 1 ? 's' : ''}`\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tconsole.error(`Error checking directory status for ${fsPath}:`, error);\n\t\t}\n\n\t\treturn undefined;\n\t}\n\n\tupdateDecorations(uri?: vscode.Uri) {\n\t\tthis._onDidChangeFileDecorations.fire(uri);\n\t}\n\n\tasync clearAndRescan(): Promise<void> {\n\t\tthis.deprecatedFiles.clear();\n\t\tthis.deprecatedFolderCounts.clear();\n\t\tawait this.updateDeprecatedFiles();\n\t}\n}\n\n// This method is called when your extension is activated\nexport async function activate(context: vscode.ExtensionContext) {\n\t// Create and register the decoration provider\n\tconst decorationProvider = new DeprecatedFilesDecorationProvider();\n\tconst decorationRegistration = vscode.window.registerFileDecorationProvider(decorationProvider);\n\n\t// Register the command to scan workspace\n\tlet scanCommand = vscode.commands.registerCommand('flag-deprecated-files.scanWorkspace', async () => {\n\t\tawait decorationProvider.clearAndRescan();\n\t});\n\n\t// Watch for file changes\n\tconst watcher = vscode.workspace.createFileSystemWatcher(\n\t\t'**/*.{js,ts,jsx,tsx,java,py,md,mdx}',\n\t\tfalse,\n\t\tfalse,\n\t\tfalse\n\t);\n\n\twatcher.onDidChange(uri => decorationProvider.handleFileChange(uri));\n\twatcher.onDidCreate(uri => decorationProvider.handleFileCreate(uri));\n\twatcher.onDidDelete(uri => decorationProvider.handleFileDelete(uri));\n\n\t// Initial scan if enabled\n\tconst config = vscode.workspace.getConfiguration('flagDeprecatedFiles');\n\tif (config.get<boolean>('scanOnStartup', true)) {\n\t\tawait decorationProvider.clearAndRescan();\n\t}\n\n\tcontext.subscriptions.push(\n\t\tdecorationRegistration,\n\t\tscanCommand,\n\t\twatcher\n\t);\n}\n\n// This method is called when your extension is deactivated\nexport function deactivate() {}\n"],
  "mappings": "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",
  "names": []
}
