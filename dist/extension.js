"use strict";var f=Object.create;var d=Object.defineProperty;var g=Object.getOwnPropertyDescriptor;var u=Object.getOwnPropertyNames;var F=Object.getPrototypeOf,m=Object.prototype.hasOwnProperty;var C=(i,e)=>{for(var t in e)d(i,t,{get:e[t],enumerable:!0})},h=(i,e,t,o)=>{if(e&&typeof e=="object"||typeof e=="function")for(let a of u(e))!m.call(i,a)&&a!==t&&d(i,a,{get:()=>e[a],enumerable:!(o=g(e,a))||o.enumerable});return i};var p=(i,e,t)=>(t=i!=null?f(F(i)):{},h(e||!i||!i.__esModule?d(t,"default",{value:i,enumerable:!0}):t,i)),v=i=>h(d({},"__esModule",{value:!0}),i);var x={};C(x,{activate:()=>w,deactivate:()=>y});module.exports=v(x);var s=p(require("vscode")),r=p(require("path"));function D(i){return i.split("").map(e=>e+"\u0336").join("")}var l=class{_onDidChangeFileDecorations=new s.EventEmitter;onDidChangeFileDecorations=this._onDidChangeFileDecorations.event;deprecatedFiles=new Set;deprecatedFolderCounts=new Map;config;context;constructor(e){this.context=e,this.config=this.getConfig(),s.workspace.onDidChangeConfiguration(o=>{o.affectsConfiguration("flagDeprecatedFiles")&&(this.config=this.getConfig(),this.updateDecorations())});let t=this.context.globalState.get("deprecatedFiles",[]);this.deprecatedFiles=new Set(t)}getConfig(){let e=s.workspace.getConfiguration("flagDeprecatedFiles");return{excludedDirectories:e.get("excludedDirectories",["node_modules"]),decorations:{badge:e.get("decorations.badge","\u2296"),color:e.get("decorations.color","custom"),customColor:e.get("decorations.customColor","#9B8EB5")},scanOnStartup:e.get("scanOnStartup",!0),maxLinesToScan:e.get("maxLinesToScan",12)}}async checkSingleFile(e){try{let t=await s.workspace.fs.readFile(e);if(!new TextDecoder().decode(t.slice(0,1024)).includes("@deprecated"))return!1;let a=await s.workspace.openTextDocument(e);for(let n=0;n<Math.min(a.lineCount,this.config.maxLinesToScan);n++)if(a.lineAt(n).text.includes("@deprecated"))return!0;return!1}catch(t){return console.error(`Error processing file ${e.fsPath}:`,t),!1}}async updateDeprecatedFiles(){if(!s.workspace.workspaceFolders)return;let e=await s.workspace.findFiles("**/*.{js,ts,jsx,tsx,java,py,md,mdx}",`{${this.config.excludedDirectories.map(o=>`**/${o}/**`).join(",")}}`),t=20;for(let o=0;o<e.length;o+=t){let a=e.slice(o,o+t);await Promise.all(a.map(async n=>{await this.checkSingleFile(n)&&(this.deprecatedFiles.add(n.fsPath),this.updateFolderCount(n.fsPath))})),this.updateDecorations(),await new Promise(n=>setTimeout(n,10))}}updateFolderCount(e){let t=r.dirname(e),o=this.deprecatedFolderCounts.get(t)||0;this.deprecatedFolderCounts.set(t,o+1)}async handleFileChange(e){let t=await this.checkSingleFile(e),o=this.deprecatedFiles.has(e.fsPath);t&&!o?(this.deprecatedFiles.add(e.fsPath),this.updateFolderCount(e.fsPath),this.updateDecorations(e)):!t&&o&&(this.deprecatedFiles.delete(e.fsPath),this.decrementFolderCount(e.fsPath),this.updateDecorations(e))}decrementFolderCount(e){let t=r.dirname(e),o=this.deprecatedFolderCounts.get(t)||0;o>1?this.deprecatedFolderCounts.set(t,o-1):this.deprecatedFolderCounts.delete(t)}handleFileDelete(e){this.deprecatedFiles.has(e.fsPath)&&(this.deprecatedFiles.delete(e.fsPath),this.decrementFolderCount(e.fsPath),this.updateDecorations(e))}async handleFileCreate(e){await this.checkSingleFile(e)&&(this.deprecatedFiles.add(e.fsPath),this.updateFolderCount(e.fsPath),this.updateDecorations(e))}async isDirectory(e){try{return(await s.workspace.fs.stat(s.Uri.file(e))).type===s.FileType.Directory}catch{return!1}}async provideFileDecoration(e){if(!(e.scheme==="file"))return;let o=e.fsPath;if(this.deprecatedFiles.has(o)){let a=r.basename(o);return{badge:this.config.decorations.badge,color:this.config.decorations.color==="custom"?new s.ThemeColor(this.config.decorations.customColor):new s.ThemeColor("deprecated.files.subtle"),tooltip:`${this.config.decorations.badge} ${D(a)}

This file is marked as deprecated.
Consider updating any code that depends on it.`}}try{if((await s.workspace.fs.stat(e)).type===s.FileType.Directory){let n=this.deprecatedFolderCounts.get(o);if(n)return{badge:`${n} ${this.config.decorations.badge}`,color:this.config.decorations.color==="custom"?new s.ThemeColor(this.config.decorations.customColor):new s.ThemeColor("deprecated.files.subtle"),tooltip:`Contains ${n} deprecated file${n>1?"s":""}`}}}catch(a){console.error(`Error checking directory status for ${o}:`,a)}}updateDecorations(e){this._onDidChangeFileDecorations.fire(e)}async clearAndRescan(){this.deprecatedFiles.clear(),this.deprecatedFolderCounts.clear(),await this.updateDeprecatedFiles()}async saveToCache(){await this.context.globalState.update("deprecatedFiles",Array.from(this.deprecatedFiles))}};async function w(i){let e=new l(i),t=s.window.registerFileDecorationProvider(e),o=s.commands.registerCommand("flag-deprecated-files.scanWorkspace",async()=>{await e.clearAndRescan()}),a=s.workspace.createFileSystemWatcher("**/*.{js,ts,jsx,tsx,java,py,md,mdx}",!1,!1,!1);a.onDidChange(c=>e.handleFileChange(c)),a.onDidCreate(c=>e.handleFileCreate(c)),a.onDidDelete(c=>e.handleFileDelete(c)),s.workspace.getConfiguration("flagDeprecatedFiles").get("scanOnStartup",!0)&&await e.clearAndRescan(),i.subscriptions.push(t,o,a)}function y(){}0&&(module.exports={activate,deactivate});
